.wrapper.wrapper-content.animated.fadeInRight
  .row
    .col-lg-12
      .ibox.float-e-margins
        .ibox-title
          %h5
            Veuillez remplir toutes les informations concernant votre évènement
        .ibox-content
          .red.mb-20 Les champs marqués de (*) sont obligatoires
          = form_for [:admin, @event], validate: true, html: {class: 'form-horizontal'} do |event_form|
            = event_form.hidden_field :id, id: 'id-model--user-form'
            %fieldset
              %legend Informations
              = event_form.text_field :id, id: 'event_id', style: 'display: none', value: @event.id.present? ? @event.id : 0
              .row
                %label.col-sm-2.control-label
                  Nom
                  %span.red *
                .col-sm-2
                  = event_form.text_field :name, class: 'form-control bg-contrast'
                %label.col-sm-2.control-label Min. participants
                .col-sm-2
                  = event_form.text_field :min_participant, class: 'form-control bg-contrast'
                %label.col-sm-2.control-label Max. participants
                .col-sm-2
                  = event_form.text_field :max_participant, class: 'form-control bg-contrast'

              .row.mt-30
                %label.col-sm-2.control-label
                  Date de début
                  %span.red *
                .col-sm-2
                  = event_form.text_field :start_date
                %label.col-sm-2.control-label
                  Date de fin
                  %span.red *
                .col-sm-2
                  = event_form.text_field :end_date
                %label.col-sm-2.control-label
                  Clôture des inscriptions
                  %span.red *
                .col-sm-2
                  = event_form.text_field :registration_deadline

              .row.mt-30
                %label.col-sm-2.control-label
                  Prix (en €)
                  %span.red *
                .col-sm-2
                  = event_form.text_field :price, class: 'form-control bg-contrast'
                %label.col-sm-2.control-label Public ?
                .col-sm-1
                  = event_form.check_box :type, class: 'form-control bg-contrast', checked: @event.type.present? ? @event.type.public? : false


            %fieldset.mt-30
              %legend Lieu et catégorie
              .row.mt-30
                .search-container.col-sm-5
                  .row
                    .search-input
                      %label.control-label.col-sm-5
                        Lieu
                        %span.red *
                      .field_with_errors
                        = event_form.hidden_field :location_id, class: 'list-Location_ids'
                        %input.form-control.bg-contrast{id: 'search-input-Location', 'data-model': 'Location', 'data-location-form-event': 'true', type: 'text', placeholder: 'Rechercher par nom, ville, code postal'}
                        - @event.errors.full_messages_for(:location_id).each do |message|
                          %label.message{'for': 'event_location_id'}
                            = epurate_err_msg(:Location, message)
                    .search-results.search-results-Location.col-sm-7.hidden
                      - Location.all.each do |l|
                        %p.result-item.result-item-Location.hidden{id: "Location-#{l[:id]}"}
                          = l[:name]
                          - if l[:city].present? && l[:zip_code].present?
                            %br
                            = "#{l[:city]}, #{l[:zip_code]}"
                    .search-chosen#search-chosen-Location.col-sm-7
                      - if @event[:location_id].present?
                        .item-selected.item-selected-Location{id: "for-Location-#{@event.location[:id]}"}
                          %div
                            = @event.location[:name]
                            - if @event.location.city.present? && @event.location.zip_code.present?
                              %br
                              = "#{@event.location[:city]}, #{@event.location[:zip_code]}"

                .search-container.col-sm-5
                  .row
                    .search-input
                      %label.control-label.col-sm-5 Catégorie
                      = event_form.select :category_id, options_from_collection_for_select(Category.for_event, :id, :name, @event.category_id), { prompt: 'Sélectionnez une catégorie' }, class: 'form-control bg-contrast'

            %fieldset.mt-50
              %legend Activités et associations
              .row.mt-30
                .search-container.col-sm-5
                  .row
                    .search-input
                      %label.control-label.col-sm-5 Activités
                      = event_form.hidden_field :event_activity_ids, class: 'list-Activity_ids'
                      %input.form-control.bg-contrast{id: 'search-input-Activity', 'data-model': 'Activity', 'data-multiple': 'true', 'data-quantity': 'true', type: 'text', placeholder: 'Rechercher par nom'}
                    .search-results.search-results-Activity.col-sm-7.hidden
                      - Activity.all.each do |a|
                        %p.result-item.result-item-Activity.hidden{id: "Activity-#{a[:id]}"}
                          = a[:name]
                    .search-chosen#search-chosen-Activity
                      - if @event.event_activities.present?
                        - @event.event_activities.each do |ev_ac|
                          .item-selected.item-selected-Activity{id: "for-Activity-#{ev_ac.activity[:id]}"}
                            %i.fas.fa-ban.delete-selected.delete-selected-Activity{style: 'color: red'}
                            .equipment-name
                              = ev_ac.activity[:name]
                            .equipment-qty
                              %div Quantité :
                              %input.bg-contrast{type: 'number', value: "#{ev_ac[:quantity].to_i}", name: 'list_activity_qty[]'}

                .search-container.col-sm-5
                  .row
                    .search-input
                      %label.control-label.col-sm-5 Association
                      = event_form.hidden_field :entity_event_ids, class: 'list-Entity_ids'
                      %input.form-control.bg-contrast{id: 'search-input-Entity', 'data-model': 'Entity', 'data-multiple': 'true', type: 'text', placeholder: 'Rechercher par nom'}
                    .search-results.search-results-Entity.col-sm-7.hidden
                      - Entity.all.each do |e|
                        %p.result-item.result-item-Entity.hidden{id: "Entity-#{e[:id]}"}
                          = e[:name]
                    .search-chosen#search-chosen-Entity.mw-20vw
                      - if @event.entity_events.present?
                        - @event.entity_events.each do |e_e|
                          .item-selected.item-selected-Entity{id: "for-Entity-#{e_e.entity[:id]}"}
                            %i.fas.fa-ban.delete-selected.delete-selected-Entity{style: 'color: red'}
                            %div
                              = e_e.entity[:name]


            %fieldset.mt-50
              %legend Personne de contact et matériel supplémentaire
              .row
                .search-container.col-sm-5
                  .row
                    .search-input
                      %label.control-label.col-sm-5
                        Personne de contact
                        %span.red *
                      .field_with_errors
                        = event_form.hidden_field :user_id, class: 'list-User_ids'
                        %input.form-control.bg-contrast{id: 'search-input-User', 'data-model': 'User', type: 'text', placeholder: 'Rechercher par nom ou email'}
                        - @event.errors.full_messages_for(:user_id).each do |message|
                          %label.message{'for': 'event_user_id'}
                            = epurate_err_msg(:User, message)
                    .search-results.search-results-User.col-sm-7.hidden
                      - User.active.each do |u|
                        %p.result-item.result-item-User.hidden{id: "User-#{u[:id]}"}
                          - if u.contact.present?
                            = u.contact.full_name
                            %br
                          = u[:email]
                    .search-chosen#search-chosen-User.col-sm-7
                      - if @event[:user_id].present?
                        .item-selected.item-selected-User{id: "for-User-#{@event.user[:id]}"}
                          %div
                            - if @event.user.contact.present?
                              = @event.user.contact.full_name
                              %br
                            = @event.user[:email]

                .search-container.col-sm-5
                  .row
                    .search-input
                      %label.control-label.col-sm-5 Matériel
                      = event_form.hidden_field :event_equipment_ids, class: 'list-Equipment_ids'
                      %input.form-control.bg-contrast{id: 'search-input-Equipment', 'data-model': 'Equipment', 'data-multiple': 'true', 'data-quantity': 'true', type: 'text', placeholder: 'Rechercher par nom'}
                    .search-results.search-results-Equipment.col-sm-7.hidden
                      - Equipment.all.each do |e|
                        %p.result-item.result-item-Equipment.hidden{id: "Equipment-#{e[:id]}"}
                          = e[:name]
                    .search-chosen#search-chosen-Equipment
                      - if @event.event_equipment.present?
                        - @event.event_equipment.each do |ev_eq|
                          .item-selected.item-selected-Equipment{id: "for-Equipment-#{ev_eq.equipment[:id]}"}
                            %i.fas.fa-ban.delete-selected.delete-selected-Equipment{style: 'color: red'}
                            .equipment-name
                              = ev_eq.equipment[:name]
                            .equipment-qty
                              %div Quantité :
                              %input.bg-contrast{type: 'number', value: "#{ev_eq[:quantity].to_i}", name: 'list_equipment_qty[]'}

            .row.mt-40
              .btn.btn-success.btn-add_user
                Ajouter une personne de contact
              .btn.btn-danger.btn-delete-add_user.hidden
                Supprimer le formulaire
            #user-model-form.hidden
              .mt-30
              = event_form.fields_for :user, event_form.object.user.present? ? event_form.object.user : User.new do |user_form|
                = render partial: 'shared/user_registration_form', locals: { user_form: user_form }

            .form-group.mt-50
              .col-sm-4
                %button.btn.btn-primary{type: 'submit'} Sauver l'évènement
